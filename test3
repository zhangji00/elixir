a = "
030100346b00230046000000001414140c1e326464646e8296969600000000001e1e1e1e1e0f0f0f0f0f1e324664960101000000
03010044131400000000000000000900000000005a96ee03600800000200000003090000e6b8b8e5aea23635393637373036000000000000000000000000000000000000
030100441300000001000000000001000000000015a9ee03ad0000000000000000000000e6b8b8e5aea23635393732353031000000000000000000000000000000000000
0301004413000000030000000000060000000000268a1603a21300000400000093050000e6b8b8e5aea23531383038383036000000000000000000000000000000000000
03010130020d1b4b0103ef100000000000000600000000004128b903717100000000000039070000e6b8b8e5aea2363234363631313300000000000000000000000000000000000003050000aa000000000000000000000072000000000000007400000000000000750000000000000076000000000000006b88010000000000780000000000000079000000000000007f0000000000000081000000000000008200000000000000830000000000000084000000000000006d8801000000000087000000000000006e880100000000006f88010000000000880000000000000089000000000000008a000000000000008b000000000000008c000000000000008d000000000000008e0000000000000077000000000e00007e000000000000008000000002000000850000001f000000
030100f0681d000107400e000000640d3d800e000000c40b05a00e000000f80a05c00e000000700a39000f000000e4093d200f000000e40938e00f000000080612201000000034050f4010000000340538601000000034053880100000002c0505e0100000007801160011000000c400172011000000840016401100000084000760110000008400398011000000840039a011000000800016c0110000007c000ca110000000540252ea0e00000014020ca2100000000402400210000000c4010ca3100000008c0152eb0e0000004c010ca4100000003c010ca510000000c40004c110000000c40052ec0e0000008400
0301001c1521580e160000006b880100000000000400000000000000
0301001c151bea0f100000006d880100000000000400000000000000
0301001c1533b310090000006e880100000000000600000000000000
0301001c1520b3100f0000006f880100000000000400000000000000
0301001474000300f92a0a003d2806003e280200
0301001806e30700a2130000000006000500040000000000
0301000805b19f08
0301001806190500ad000000000001000000000000000000
0301001806b1040057080000000009000800020000000000
0301000805e437c5
03010008051c0540 "
a = String.replace(a, "\n", "")
a = String.replace(a, " ", "")
b = String.upcase(a) |> Base.decode16!

<<0x3, 01, lol::binary>> = b

myfunction = fn
  (<<0x3, 01, 00, lol::binary>>, mfunc2) -> 
  	IO.puts "got packet #{inspect lol}"
  	mfunc2.(lol, mfunc2)
  (lol, _) -> 
  	IO.puts "finished"
  	lol
end

defmodule Proto do
	def proc(5, data) do
		IO.puts "packet 5: #{inspect data}" 
		:handlred
	end
	def proc(19,data) do
		#<<_::binary-size(24),a::binary-size(48),c::binary>>=data
		data |> :binary.bin_to_list |> Enum.find_index(fn x -> (x-1)==0 end)|>IO.puts
	end
	def proc(x, data) do #this ones are yet unhandled
		IO.puts "This is the  packet  #{x} #{inspect data}" 
		:unhandled
	end
end

factory =fn 
	#get the opcode in this line:
   (<<0x03,01,s::integer-size(16),b,lol::binary>>,fun)->
     s=s - 4 - 1
     <<data :: binary-size(s),lol::binary>> = lol
	#IO.puts "got packetlength #{s}"
	 #<<a,_::binary>> = data
	#for each opcode, call a different function to process it
	
	Proto.proc b, data
	#TDD test driven development, and you run it, 
	#and fix it, until it doesnt crash

	fun.(lol,fun)
	(any, _)->
		 IO.puts "finished"
		 any
end

defmodule Test do
	def test(<<0x3, 01, 
			s::integer-size(16), 
			lol::binary>>) do
		s = s-4
		<<data :: binary-size(s), lol::binary>> = lol
	  	IO.puts "got packet #{inspect s} #{inspect data}"
		test(lol)
	end
	def test(lol) do
	  	IO.puts "finished rem: #{inspect lol}"
	  	lol
	end
end
#Test.test(b)
factory.(b<>"a",factory)
#This is the  packet  19 <<0, 0, 0, get this:1, 0, 0, 0, 0, 0, and this: 1, 0, 0, 0, 0, 0, 21, 169, 238, 3, 173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 184, 184, 229, 174, 162, 54, 53, 57, 55, 50, 53, 48, 49, 0, 0, 0, 0, 0, ...>>
Enum.map
